"""Creating Table model and associating Headsquarter and Table models

Revision ID: 8d6036cc1d28
Revises: f84efe0a645d
Create Date: 2025-04-19 13:00:58.338807

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8d6036cc1d28'
down_revision: Union[str, None] = 'f84efe0a645d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # 1. Eliminar FK que depende de 'headsquarters'
    op.drop_constraint('users_headsquarter_id_fkey', 'users', type_='foreignkey')

    # 2. Eliminar columna antigua
    op.drop_column('users', 'headsquarter_id')

    # 3. Eliminar tabla vieja
    op.drop_table('headsquarters')

    # 4. Crear nueva tabla headquarters
    op.create_table('headquarters',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('location', sa.String(length=500), nullable=False),
        sa.Column('phone', sa.String(length=60), nullable=True),
        sa.Column('city', sa.String(length=100), nullable=False),
        sa.Column('status', sa.Enum('ACTIVE', 'CLOSE', name='statusheadquarters'), nullable=False),
        sa.Column('company_id', sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(['company_id'], ['companies.id']),
        sa.PrimaryKeyConstraint('id')
    )

    # 5. Crear tabla nueva de mesas
    op.create_table('tables',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('number', sa.Integer(), nullable=False),
        sa.Column('seats', sa.Integer(), nullable=False),
        sa.Column('status', sa.Enum('AVAILABLE', 'BOOKED', 'BUSY', 'OUTOFSERVICE', name='statustable'), nullable=False),
        sa.Column('orientation', sa.Enum('HORIZONTAL', 'VERTICAL', name='orientationtable'), nullable=False),
        sa.Column('headquarter_id', sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(['headquarter_id'], ['headquarters.id']),
        sa.PrimaryKeyConstraint('id')
    )

    # 6. Crear la nueva columna en users con su FK hacia la nueva tabla
    op.add_column('users', sa.Column('headquarter_id', sa.UUID(), nullable=False))
    op.create_foreign_key(None, 'users', 'headquarters', ['headquarter_id'], ['id'])


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('headsquarter_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key('users_headsquarter_id_fkey', 'users', 'headsquarters', ['headsquarter_id'], ['id'])
    op.drop_column('users', 'headquarter_id')
    op.create_table('headsquarters',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=60), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'CLOSE', name='statusheadsquarters'), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='headsquarters_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='headsquarters_pkey')
    )
    op.drop_table('tables')
    op.drop_table('headquarters')
    # ### end Alembic commands ###
